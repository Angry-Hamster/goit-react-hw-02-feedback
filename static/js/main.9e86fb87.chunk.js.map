{"version":3,"sources":["components/Feedback/Statistic.js","components/Feedback/FeedbackOptions .js","components/Feedback/Section.js","components/Feedback/Notification.js","App.js","index.js","components/Feedback/style.module.css"],"names":["Statistic","className","css","ul","this","props","good","neutral","bad","total","Math","floor","Number","positivePercentage","Component","defaultProps","FeedbackOptions","button","onClick","onLeaveFeedback","name","Section","title","component","Notification","message","App","state","changeState","e","setState","prev","target","countTotalFeedback","countPercentage","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"+QAKMA,E,uKAEF,OACE,mCACE,qBAAKC,UAAWC,IAAIC,GAApB,UACE,6BAAI,6CAAgBC,KAAKC,MAAMC,UAC/B,6BAAI,6CAAgBF,KAAKC,MAAME,aAC/B,6BAAI,6CAAgBH,KAAKC,MAAMG,SAC/B,6BAAI,6CAAgBJ,KAAKC,MAAMI,WAC/B,6BAAI,6CAAgBC,KAAKC,MAAMC,OAAOR,KAAKC,MAAMQ,qBAA7C,kB,GATUC,aAgBxBd,EAAUe,aAAe,CACvBT,KAAM,EACNC,QAAS,EACTC,IAAK,EACLC,MAAO,EACPI,mBAAoB,GAWPb,QCfAgB,E,uKAhBX,OACE,gCACE,wBAAQf,UAAWC,IAAIe,OAAQC,QAASd,KAAKC,MAAMc,gBAAiBC,KAAK,OAAzE,kBAGA,wBAAQnB,UAAWC,IAAIe,OAAQC,QAASd,KAAKC,MAAMc,gBAAiBC,KAAK,UAAzE,qBAGA,wBAAQnB,UAAWC,IAAIe,OAAQC,QAASd,KAAKC,MAAMc,gBAAiBC,KAAK,MAAzE,wB,GAVsBN,aCCxBO,E,uKAEF,OACE,qCACE,oBAAIpB,UAAWC,IAAIoB,MAAnB,SAA2BlB,KAAKC,MAAMiB,QACrClB,KAAKC,MAAMkB,iB,GALGT,aAWvBO,EAAQN,aAAe,CACrBO,MAAO,QACPC,UAAW,SAOEF,QCpBTG,E,uKAEF,OACE,mCACE,oBAAIvB,UAAWC,IAAIoB,MAAnB,SAA2BlB,KAAKC,MAAMoB,gB,GAJjBX,aAU7BU,EAAaT,aAAe,CAC1BU,QAAS,SAOID,QCgCAE,E,4MA/CbC,MAAQ,CACNrB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPoB,YAAc,SAACC,GACb,EAAKC,UAAS,SAACC,GAAD,sBAAcF,EAAEG,OAAOZ,KAAOW,EAAKF,EAAEG,OAAOZ,MAAQ,O,EAGpEa,mBAAqB,WAAO,IAAD,EACM,EAAKN,MACpC,OAFyB,EACjBrB,KADiB,EACXC,QADW,EACFC,K,EAIzB0B,gBAAkB,WAChB,OAAOxB,KAAKC,MAAyB,IAAlB,EAAKgB,MAAMrB,KAAc,EAAK2B,uB,uDAIjD,OACE,qCACE,cAAC,EAAD,CAASX,MAAM,wBAAwBC,UACvC,cAAC,EAAD,CAAiBJ,gBAAiBf,KAAKwB,gBAGvC,cAAC,EAAD,CACEN,MAAM,aACNC,UAC+B,GAA7BnB,KAAK6B,qBACH,cAAC,EAAD,CAAcR,QAAQ,sBAEtB,cAAC,EAAD,CACEnB,KAAMF,KAAKuB,MAAMrB,KACjBC,QAASH,KAAKuB,MAAMpB,QACpBC,IAAKJ,KAAKuB,MAAMnB,IAChBC,MAAOL,KAAK6B,mBAAmB7B,KAAKuB,OACpCd,mBAAoBT,KAAK8B,gBAAgB9B,KAAKuB,kB,GAtC5Cb,aCFlBqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,GAAK,kBAAkB,OAAS,yB","file":"static/js/main.9e86fb87.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nimport css from './style.module.css'\r\n\r\nclass Statistic extends Component {\r\n  render(){\r\n    return(\r\n      <>\r\n        <ul  className={css.ul}>\r\n          <li><p>good:       {this.props.good}</p></li>\r\n          <li><p>neutral:    {this.props.neutral}</p></li>\r\n          <li><p>bad:        {this.props.bad}</p></li>\r\n          <li><p>total:      {this.props.total}</p></li>\r\n          <li><p>percentage: {Math.floor(Number(this.props.positivePercentage))}%</p></li>\r\n        </ul>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nStatistic.defaultProps = {\r\n  good: 0,\r\n  neutral: 0,\r\n  bad: 0,\r\n  total: 0,\r\n  positivePercentage: 0,\r\n}\r\n\r\nStatistic.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.number,\r\n}\r\n\r\nexport default Statistic","import React, { Component } from \"react\";\r\n\r\nimport css from \"./style.module.css\";\r\n\r\nclass FeedbackOptions extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button className={css.button} onClick={this.props.onLeaveFeedback} name=\"good\">\r\n          Good\r\n        </button>\r\n        <button className={css.button} onClick={this.props.onLeaveFeedback} name=\"neutral\">\r\n          Neutral\r\n        </button>\r\n        <button className={css.button} onClick={this.props.onLeaveFeedback} name=\"bad\">\r\n          Bad\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FeedbackOptions;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nimport css from './style.module.css'\r\n\r\nclass Section  extends Component {\r\n  render(){\r\n    return(\r\n      <>\r\n        <h3 className={css.title}>{this.props.title}</h3>\r\n        {this.props.component}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nSection.defaultProps = {\r\n  title: 'Title',\r\n  component: '<></>'\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n}\r\n\r\nexport default Section","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nimport css from './style.module.css'\r\n\r\nclass Notification   extends Component {\r\n  render(){\r\n    return(\r\n      <>\r\n        <h3 className={css.title}>{this.props.message}</h3>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nNotification.defaultProps = {\r\n  message: 'Title',\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n}\r\n\r\nexport default Notification","import React, { Component } from \"react\";\n\nimport Statistic from \"./components/Feedback/Statistic\";\nimport FeedbackOptions from \"./components/Feedback/FeedbackOptions \";\nimport Section from \"./components/Feedback/Section\";\nimport Notification from \"./components/Feedback/Notification\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  changeState = (e) => {\n    this.setState((prev) => ({ [e.target.name]: prev[e.target.name] + 1 }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return  good + neutral + bad;\n  };\n\n  countPercentage = () => {\n    return Math.floor((this.state.good * 100) / this.countTotalFeedback());\n  };\n\n  render() {\n    return (\n      <>\n        <Section title=\"Please leave feedback\" component={\n        <FeedbackOptions onLeaveFeedback={this.changeState} />\n        } />\n\n        <Section\n          title=\"Statistics\"\n          component={\n            this.countTotalFeedback() == 0 ? (\n              <Notification message=\"No feedback given\" />\n            ) : (\n              <Statistic\n                good={this.state.good}\n                neutral={this.state.neutral}\n                bad={this.state.bad}\n                total={this.countTotalFeedback(this.state)}\n                positivePercentage={this.countPercentage(this.state)}\n              />\n            )\n          }\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"style_title__1qea5\",\"ul\":\"style_ul__3DrgZ\",\"button\":\"style_button__1THUx\"};"],"sourceRoot":""}